<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSS on 呆尬猴的博客</title>
    <link>https://chow1027.xyz/categories/css/</link>
    <description>Recent content in CSS on 呆尬猴的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 10 Nov 2019 09:50:38 +0800</lastBuildDate>
    
	<atom:link href="https://chow1027.xyz/categories/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS知识总结</title>
      <link>https://chow1027.xyz/2019/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 10 Nov 2019 09:50:38 +0800</pubDate>
      
      <guid>https://chow1027.xyz/2019/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</guid>
      <description>css动画 浏览器渲染原理  根据HTML构建HTML树（DOM） 根据CSS构建CSS树（CSSOM） 将两棵树合并成一棵渲染树（render tree） Layout布局(文档流、盒模型、计算元素的大小和位置) Paint绘制（边框颜色、字体颜色等&amp;hellip;） Composite合成（根据层叠关系展示画面）  三种更新方式 在实际操作中我们一般采用JS更新样式
div.style.background =&amp;#34;red&amp;#34; div.style.display = &amp;#34;none&amp;#34; div.classList.add(&amp;#39;xxx&amp;#39;) --直接给元素添加一个&amp;#34;xxx&amp;#34;的类更好，该元素会拥有该类的所有属性 div.remove() --直接删掉节点  JS/CSS &amp;gt; 样式 &amp;gt; 布局 &amp;gt; 绘制 &amp;gt; 合成 (比如div.remove()，导致文档流的其他元素重新布局。) JS/CSS &amp;gt; 样式 &amp;gt; 绘制 &amp;gt; 合成 (比如更改背景色，则布局不需要改变) JS/CSS &amp;gt; 样式 &amp;gt; 合成 (比如只改了transform)  查询哪个属性触发哪个流程： CSS Triggers
css动画的两种做法  利用transition+transform+hover animation  transform transform的四个常用功能：
 位移translate 缩放scale 旋转rotate 倾斜skew
注意：inline元素不支持transform，要先变成block.  transition transition:属性名 时长 过渡方式 延迟；</description>
    </item>
    
    <item>
      <title>CSS布局</title>
      <link>https://chow1027.xyz/2019/css%E5%B8%83%E5%B1%80/</link>
      <pubDate>Fri, 08 Nov 2019 06:36:14 +0800</pubDate>
      
      <guid>https://chow1027.xyz/2019/css%E5%B8%83%E5%B1%80/</guid>
      <description>float布局、flex布局、grid布局。
布局分类 固定宽度布局：主要有960/1000/1024px;
不固定宽度布局：靠文档流原理布局。(主要用于手机页面);
响应式布局(混合布局)：既适应pc上的固定布局，也适应手机上的不固定布局。
布局思路 float布局 步骤
 给子元素加上float:left | right; 给父元素加上.clearfix  经验
 一般会预留一些空间或者最后一个元素width不写死。 不需要做响应式，因为手机页面没有IE，而float布局是专门为IE设计的。 IE6/7存在双倍margin的bug，解决办法是  针对IE6/7对margin减半 再加一个display:inline-block;   用&amp;quot;outline&amp;quot;代替&amp;quot;border&amp;rdquo;,可以使得边框不占据内部的空间(outline不在border-box的width计算范围内)  .float { float:left; margin-left:10px; /*一般浏览器会执行这一句,忽略下一句。*/ _margin-left:5px; /*IE6/7认得这一句，因此会先执行上一句，然后执行这一句重设margin，注意下划线_*/ } 代码示例
&amp;lt;!--html--&amp;gt; &amp;lt;header class = &amp;#34;clearfix&amp;#34;&amp;gt; &amp;lt;div class= &amp;#34;float&amp;#34;&amp;gt;balabala&amp;lt;/div&amp;gt; &amp;lt;/header&amp;gt; /*css*/ .clearfix:after { /*&amp;#34;:&amp;#34;或&amp;#34;::&amp;#34;都行，但IE8及以下只认得&amp;#34;:&amp;#34;*/ content:&amp;#34;&amp;#34;; display:block; clear:both; } /*小技巧：如果发现图片下面有多余的东西，可以用这句话让图片居中。*/ vertical-align:top |middle; /*让块级元素居中*/ margin:0 auto; /*下面这句更好，因为没有覆盖元素本身的上下外边距*/ margin-left:auto; margin-right:auto; flex布局 container&amp;ndash;容器(父元素) item&amp;ndash;项目(容器内的子块；子元素)
class = &amp;ldquo;container&amp;rdquo; 样式
/*设置flex布局*/ .container { display:flex | inline-flex; } /*item流动方向-主轴*/ .</description>
    </item>
    
    <item>
      <title>CSS基础</title>
      <link>https://chow1027.xyz/2019/css%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 05 Nov 2019 20:03:57 +0800</pubDate>
      
      <guid>https://chow1027.xyz/2019/css%E5%9F%BA%E7%A1%80/</guid>
      <description>CSS &amp;ndash;层叠样式表 CSS(Cascading Style Sheets)是层叠样式表，所谓层叠有三层含义：
 样式层叠：可多次对同一选择器进行声明。 选择层叠：可用不同选择器对同一元素进行声明。 文件层叠：可用多个文件层叠。  CSS2.1是IE支持的现在使用最广泛的版本，CSS3是现代版本，分模块进行升级，目前IE8只是部分支持。由于CSS版本众多，因此要确认我们所使用的CSS特性在某个浏览器是否支持，我们可以查询caniuse网站。网页地址
CSS语法 CSS语法主要有两种：
/*第一种*/ 选择器 { 属性名:属性值; /*注释*/ } 注：
 要使用英文符号； 要区分大小写； 没有&amp;rdquo;//&amp;ldquo;注释； 最后的&amp;rdquo;;&amp;ldquo;虽然可以省略，但不要省略； 浏览器会忽略错误，但不会报错。  /*第二种*/ /*声明字符编码*/ @charset = &amp;#34;UTF-8&amp;#34;; /*导入CSS文件*/ @import url(2.css); /*媒体查询*/ @media(min-width:100px)and(max-width:200px){ 语法一 } 注:
 charset必须放在第一行。 前两个的@语法必须加&amp;rdquo;;&amp;quot;。 charset是字符集的意思，但语句本身声明的是字符编码。  CSS查资料  Google搜索:MDN + 技术名词； Google搜索:CSS tricks + 技术名词； Google搜索:张鑫旭 + 技术名词；   最权威资料：Google搜索:CSS spec(可以查看css2.1中文版)  CSS的调试  使用W3C验证器。在线验证器 使用VScode/Webstorm看字体颜色。 使用开发者工具看警告。(有黄色的警告标志证明肯定是语法错误；被划掉说明语法错误或者是样式被覆盖/忽略。) border调试法  border调试法 当怀疑某个元素出现问题：</description>
    </item>
    
    <item>
      <title>CSS盒模型</title>
      <link>https://chow1027.xyz/2019/css%E7%9B%92%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Tue, 05 Nov 2019 19:49:48 +0800</pubDate>
      
      <guid>https://chow1027.xyz/2019/css%E7%9B%92%E6%A8%A1%E5%9E%8B/</guid>
      <description>什么是css盒模型？ 根据css 2.1 中文版文档的描述:
CSS盒模型描述了一个为文档树中的元素生成的并根据视觉格式化模型进行布局的矩形框。
我们可以理解为css中每一个元素都是一个盒子，拥有四个区域，分别是：内容区(content)、内边距(padding)、边框(border)和外边距(margin)。 css盒模型分两种：border-box 和 content-box。
他们的区别在于content-box的宽度只包含content内容区，border-box的宽度包含到border，它包括content内容区、padding内边距、border边框。
返回CSS基础</description>
    </item>
    
  </channel>
</rss>